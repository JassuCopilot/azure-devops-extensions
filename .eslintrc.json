{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "plugins": ["@typescript-eslint", "react", "simple-import-sort", "prettier", "import"],
    "env": {
        "browser": true,
        "node": true
    },
    "extends": ["plugin:prettier/recommended", "plugin:@typescript-eslint/recommended", "plugin:react/recommended"],
    "parserOptions": {
        "ecmaVersion": 2018,
        "sourceType": "module",
        "ecmaFeatures": {
            "jsx": true
        }
    },
    "rules": {
        // sort imports
        "simple-import-sort/sort": [
            "error",
            {
                "groups": [
                    // Styles first
                    ["^.+\\.s?css$"],
                    // React 2nd
                    ["^react$", "^react-dom$"],
                    // Side effect imports.
                    ["^\\u0000"],
                    // Packages.
                    // Things that start with a letter (or digit or underscore), or `@` followed by a letter.
                    ["^@?\\w"],
                    // Absolute imports and other imports such as Vue-style `@/foo`.
                    // Anything that does not start with a dot.
                    ["^[^.]"],
                    // Relative imports.
                    // Anything that starts with a dot.
                    ["^\\."]
                ]
            }
        ],
        "sort-imports": "off",
        "prettier/prettier": "error",
        "import/first": "error",
        "import/newline-after-import": "error",
        "import/no-duplicates": "error",

        // stylistic rules
        "@typescript-eslint/class-name-casing": "error",
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/no-empty-function": "off",
        "eol-last": ["error", "always"],
        "@typescript-eslint/consistent-type-assertions": ["error", { "assertionStyle": "as" }],
        "no-empty": "error",
        "@typescript-eslint/camelcase": "off",

        // code-quality rules
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "radix": "off",
        "react/prop-types": "off",
        "no-unsafe-finally": "error",
        "no-unused-expressions": ["error", { "allowShortCircuit": false, "allowTernary": true }],
        "no-var": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-namespace": "off",
        "react/display-name": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/interface-name-prefix": [
            "error",
            {
                "prefixWithI": "always"
            }
        ]
    },
    "settings": {
        "react": {
            "version": "detect"
        }
    }
}
